import { FC, useEffect, useState } from 'react'

type PayloadCard = {
    payloadId: number
    imgUrl: string
    title: string
    description: string
    loadCapacity: number
    flightDateStart: Date
    flightDateEnd: Date
    desiredPrice: number
    detailedDescription: string
}

const data: PayloadCard[] = [{
    payloadId:           1,
    imgUrl:       "https://ntv-static.cdnvideo.ru/home/news/2023/20230205/sputn_io.jpg",
    title:        "«Электро-Л» № 4",
    description:  "Гидрометеорологическй космический аппарат",
    loadCapacity: 1.8,
    flightDateStart: new Date(2023, 1, 5, 12, 12, 52, 0),
    flightDateEnd:   new Date(2023, 1, 5, 12, 12, 52, 0),
    desiredPrice:        16.5,
    detailedDescription: "Спутники «Электро-Л» создаются в рамках Федеральной космической программы России и входят" +
        " в геостационарную гидрометеорологическую космическую систему «Электро» разработки НПО Лавочкина. Они предназначены" +
        " для обеспечения оперативной и независимой гидрометеорологической информацией подразделений Федеральной службы по" +
        " гидрометеорологии и мониторингу окружающей среды (Росгидромет) и других ведомств. " +
        "Сейчас в системе «Электро», функционирующей на околоземной орбите с 2011 года, используются по целевому назначению " +
        "два спутника — «Электро-Л» № 2 (запущен 11 декабря 2015 года) в точке стояния 14,5° западной долготы и «Электро-Л» №" +
        " 3 (запущен 24 декабря 2019 года) в точке стояния 76° восточной долготы. Аппарату «Электро-Л» № 4 предстоит работать" +
        " в точке стояния 165,8° восточной долготы. \n" +
        "Уникальные особенности спутников «Электро-Л» позволяют получать независимые метеоданные с орбиты Земли каждые 15—30" +
        " минут. Благодаря круглосуточной передаче с космических аппаратов высококачественных многоспектральных снимков повышается" +
        " не только качество и оперативность прогнозов погоды, но и решаются глобальные вопросы мониторинга климата и изменений," +
        " выдаются штормовые и экстренные телеграммы при выявлении чрезвычайных ситуаций. \n" +
        "Также, спутники ретранслируют сигналы от аварийных радиобуев международной спутниковой поисково-спасательной системы" +
        " КОСПАС-САРСАТ. Это помогает поисково-спасательным службам эффективнее реагировать на сигналы бедствия для спасения человеческих жизней.",
},
{
    payloadId:           2,
    imgUrl:       "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/ISS-59_Progress_MS-11_approaches_the_ISS.jpg/1200px-ISS-59_Progress_MS-11_approaches_the_ISS.jpg",
    title:        "«Прогресс МС-22»",
    description:  "Грузовой корабль",
    loadCapacity: 2.5,
    flightDateStart: new Date(2023, 1, 5, 12, 12, 52, 0),
    flightDateEnd:   new Date(2023, 1, 5, 12, 12, 52, 0),
    desiredPrice:        26.5,
    detailedDescription: "«Прогресс МС-22» — космический транспортный грузовой корабль серии «Прогресс», запуск которого состоялся 6" +
        " февраля 2023 года со стартового комплекса «Восток» (Площадка 31) космодрома «Байконур» по программе 83-й миссии снабжения " +
        "Международной космической станции[1]. Это 175-й полёт космического корабля серии «Прогресс».",
},
{
    payloadId:           3,
    imgUrl:       "https://news.cgtn.com/news/2023-02-26/Russia-s-replacement-Soyuz-spacecraft-arrives-at-space-station-1hJfEkcHidG/img/b5c3147c02e44da8941bf851fdebfcc7/b5c3147c02e44da8941bf851fdebfcc7-1280.png",
    title:        "«Союз МС-23»",
    description:  "Беспилотный корабль",
    loadCapacity: 7.2,
    flightDateStart: new Date(2023, 1, 5, 12, 12, 52, 0),
    flightDateEnd:   new Date(2023, 1, 5, 12, 12, 52, 0),
    desiredPrice:        35.5,
    detailedDescription: "'Союз МС' ('МС' - 'модернизированные системы') принадлежит к семейству космических" +
        " кораблей 'Союз' (первый пилотируемый запуск состоялся в 1967 году). Головным разработчиком и изготовителем" +
        " корабля является Ракетно-космическая корпорация 'Энергия' им. С. П. Королева (РКК 'Энергия'; город Королев," +
        " Московская область). Эскизный проект 'Союза МС', разработанный по заданию Федерального космического агентства" +
        " (ныне госкорпорация 'Роскосмос'), был одобрен на заседании научно-технического совета РКК 'Энергия' в августе" +
        " 2011 года. Корабль создан на базе предыдущей модификации 'Союз ТМА-М' (запуски проводились в 2010-2016 годах)" +
        " путем глубокой модернизации. 'Союз МС' предназначен для доставки экипажей на МКС и возвращения их с орбиты" +
        " обратно на Землю. Он выполняет роль корабля-спасателя в случаях вынужденной или аварийной эвакуации экипажа" +
        " (при возникновении опасной ситуации на станции, заболевания или травмы космонавтов). Кроме того, 'Союз МС'" +
        " используется для доставки на МКС и возвращения с орбиты небольших грузов (научно-исследовательской аппаратуры" +
        " и результатов экспериментов, личных вещей космонавтов и др.), а также для удаления со станции отходов в бытовом" +
        " отсеке, который сгорает плотных слоях атмосферы при спуске корабля.",
},
{
    payloadId:           4,
    imgUrl:       "https://finobzor.ru/uploads/posts/2016-09/org_vrke626.jpg",
    title:        "«Луч-5Х»",
    description:  "Многофункциональная космическая система ретрансляции",
    loadCapacity: 37,
    flightDateStart: new Date(2023, 1, 5, 12, 12, 52, 0),
    flightDateEnd:   new Date(2023, 1, 5, 12, 12, 52, 0),
    desiredPrice:        65,
    detailedDescription: "'Олимп-К', также обозначаемый как 'Луч', является российским геостационарным спутником," +
        " созданным для Министерства обороны России и российского разведывательного управления ФСБ. Цели миссий не" +
        " опубликованы. Согласно сообщению 'Коммерсанта', спутник будет выполнять двойную роль: одна из них - радиотехническая" +
        " разведка (SIGINT), а другая обеспечивает защищенную связь для правительственных нужд. Обозначение 'Луч' указывает" +
        " на роль ретранслятора данных. Следовательно, обозначение 'Олимп-К' может относиться к полезной нагрузке" +
        " SIGINT, в то время как обозначение 'Луч' относится к полезной нагрузке ретрансляции данных. Другой источник" +
        " сообщает, что спутник должен обеспечивать сигналы навигационной коррекции для системы ГЛОНАСС. Сообщалось также" +
        " о бортовом лазерном устройстве связи.",
},
{
    payloadId:           5,
    imgUrl:       "https://avatars.dzeninfra.ru/get-zen_doc/9428044/pub_641e3138e540d5493c71189b_641e520f617db875869202c0/scale_1200",
    title:        "«Барс-М №4»",
    description:  "Электронно-оптический спутник",
    loadCapacity: 4,
    flightDateStart: new Date(2023, 1, 5, 12, 12, 52, 0),
    flightDateEnd:   new Date(2023, 1, 5, 12, 12, 52, 0),
    desiredPrice:        17.4,
    detailedDescription: "Спутник 'Барс-М' - это новый электронно-оптический спутник наблюдения за территорией, который" +
        " заменит серию 'Янтарь-1KFT' (Kometa) с возвратом пленки и отмененную серию 'Барс'." +
        " 'Барс-М' является вторым воплощением проекта 'Барс', который был начат в середине 1990-х годов для разработки преемника спутников" +
        " наблюдения за территорией класса Komtea. Первоначальный проект Bars был остановлен в начале 2000-х годов. В" +
        " 2007 году 'ЦСКБ-Прогресс' заключило контракт на поставку 'Барс-М', для которого, как сообщается, сервисный" +
        " модуль на базе 'Янтаря' был заменен новым усовершенствованным сервисным модулем." +
        " Спутники 'Барс-М' оснащены электронно-оптической фотосистемой 'Карат', разработанной и изготовленной Ленинградским" +
        " оптико-механическим объединением (ЛОМО), и двойным лазерным высотомером для получения топографических изображений," +
        " стереоизображений, данных высотомера и изображений высокого разрешения с наземным разрешением около 1 метра.",
}]

const dateConversion = (date: Date): string => {
    let hours = date.getHours().toString();
    let minutes = date.getMinutes().toString();
    let seconds = date.getSeconds().toString();
    
    // Добавляем ноль перед числами меньше 10 для корректного форматирования времени
    if (parseInt(hours) < 10) {
        hours = '0' + hours;
    }
    if (parseInt(minutes) < 10) {
        minutes = '0' + minutes;
    }
    if (parseInt(seconds) < 10) {
        seconds = '0' + seconds;
    }


    return hours + ':' + minutes + ':' + seconds + ' ' + date.toLocaleDateString('en-GB')
}

const PayloadsPage: FC = () => {
    // В функциональных компонентах для работы с состоянием можно использовать хук useState()
    // Он возвращает кортеж из двух элементов:
    // 1 элемент - объект состояния
    // 2 элемент - метод который позволит нам обновить состояние
    const [space_satellite, setRandomName] = useState('')

    // Кстати, это хороший пример деструктуризации массива в JavaScript
    const [cards, setNames] = useState(data)

    const [showNames, setShowNames] = useState(false)

    // В данном хендлере мы изменяем состояние на какое-то конкретное
    const handleShowNames = () => {
        setShowNames(true)
    }

    // В данном хендлере мы изменяем состояние на какое-то конкретное
    const handleHideNames = () => {
        setShowNames(false)
    }

    // useEffect(()=>{
    //     console.log('Этот код выполняется только на первом рендере компонента')
    //     // В данном примере можно наблюдать Spread syntax (Троеточие перед массивом)
    //     setNames((names) => [...names, 'Бедный студент'])

    //     return () => {
    //         console.log('Этот код выполняется, когда компонент будет размонтирован')
    //     }
    // },[])

    // useEffect(()=>{
    //     console.log('Этот код выполняется каждый раз, когда изменится состояние showNames')
    //     setRandomName(names[Math.floor(Math.random()*names.length)])
    // },[showNames])

    return (
        <div>
            <h1>ERTYUkiuytr</h1>
            {/*Кнопка для того, чтобы показать имена*/}
            <button onClick={handleShowNames}>Хочу увидеть список имен</button>
            {/*Кнопка для того, чтобы скрыть имена*/}
            <button onClick={handleHideNames}>Хочу скрыть список имен</button>

            {/*React отрисует список только если showNames будет равен true, boolean значения игнорируются при отрисовке*/}
            {showNames && (
                <ul>
                    {/* {names.map((name, index)=> (
                        <li key={index}>
                            <span>{name}</span>
                        </li>
                    ))} */}
                </ul>
            )}

            <div className="search_container">
                <form action="/payloads">
                    <input type="text" name="space_satellite" placeholder="Введите название" value={ space_satellite }></input>
                    <input type="submit" value="Найти"></input>
                </form>
            </div>
           
            {cards.length > 0 &&
                <div className="card_container">
                    {cards.map((value) => (
                        <div id ={ String(value.payloadId) } className="card">
                            <div className="card-img_container">
                                <div className="card-img" style={{ backgroundImage: `url(${ value.imgUrl })` }}></div>
                            </div>
                            <div className="card-content">
                                <div className="card-text_container">
                                <h3>
                                    { value.title }
                                </h3>
                                <div>
                                    <div>
                                        Описание: <span>{ value.description }</span>
                                    </div>
                                    <div>
                                        Грузоподъёмность: <span>{ value.loadCapacity } тонн</span>
                                    </div>
                                    <div>
                                        Планируемая дата полёта: от <span>{ dateConversion(value.flightDateStart) }</span> до 
                                        <span>{ dateConversion(value.flightDateStart) }</span> 
                                    </div>
                                    <div>
                                        Цена услуги: <span>{ value.desiredPrice } млн рублей</span>
                                    </div>
                                </div>
                                </div>
                                <div className="card-btn_container">
                                <form action={`http://localhost:8080/payload/${ value.payloadId }`} method="get">
                                    <input type="submit" value="Подробнее"></input>
                                </form>
                                <form action={`http://localhost:8080/payload/${ value.payloadId }`} method="post">
                                    <button className="card-button">Удалить услугу</button>
                                </form>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
            }
                    
            {cards.length <= 0 &&
                <div>
                    <h2>Ничего не найдено</h2>
                </div>
            }
        </div>
    )
}

export default PayloadsPage