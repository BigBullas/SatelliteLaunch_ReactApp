{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Web application on the topic \"Launching satellites from the Vostochny cosmodrome\"",
        "title": "Satellite launch application",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/check-auth": {
            "get": {
                "description": "Retrieves user information based on the provided user context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Check user authentication",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/flights_payloads/payload/{id}": {
            "delete": {
                "description": "Remove a payload from a planned flight.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flights Payloads"
                ],
                "summary": "Remove payload from flight",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the payload",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payload removed from flight",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/flights_payloads/payload/{id}/count/{count}": {
            "put": {
                "description": "Change the count of a payload for a planned flight.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flights Payloads"
                ],
                "summary": "Change payload count for flight",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the payload",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "New count of the payload",
                        "name": "count",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payload count successfully updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Logs out the user by blacklisting the access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/payloads": {
            "get": {
                "description": "Retrieves a list of payloads based on the provided filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payloads"
                ],
                "summary": "Get Payload List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space Satellite",
                        "name": "space_satellite",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Load Capacity Start",
                        "name": "load_capacity_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Load Capacity End",
                        "name": "load_capacity_end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Flight Date Start",
                        "name": "flight_date_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Flight Date End",
                        "name": "flight_date_end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Payload"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Create a new payload with the provided details.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payloads"
                ],
                "summary": "Create new payload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title of the payload",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file of the payload",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Load capacity of the payload",
                        "name": "load_capacity",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Description of the payload",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Detailed description of the payload",
                        "name": "detailed_description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Desired price of the payload",
                        "name": "desired_price",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Start date of the payload",
                        "name": "flight_date_start",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date of the payload",
                        "name": "flight_date_end",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Payload successfully created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/payloads/rocket_flight": {
            "post": {
                "description": "Adds a specified payload to a planned flight. The user must provide their creator ID and the payload ID in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payloads"
                ],
                "summary": "Add Payload to Flight",
                "parameters": [
                    {
                        "description": "Payload ID to be added to the flight",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The ID of the draft flight after adding the payload",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/payloads/{id}": {
            "get": {
                "description": "Retrieve the payload associated with a specific card ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payloads"
                ],
                "summary": "Get card payload by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Payload"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing payload.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payloads"
                ],
                "summary": "Update existing payload",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the payload",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title of the payload",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Image file of the payload",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Load capacity of the payload",
                        "name": "load_capacity",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Description of the payload",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Detailed description of the payload",
                        "name": "detailed_description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Desired price of the payload",
                        "name": "desired_price",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Start date of the payload",
                        "name": "flight_date_start",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "End date of the payload",
                        "name": "flight_date_end",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payload successfully updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete a payload with the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payloads"
                ],
                "summary": "Delete payload by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the payload",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payload successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "very very friendly response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tests"
                ],
                "summary": "Show hello text",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/profile": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the profile of the currently logged-in user. Allows changing login, password, and email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Update Profile",
                "parameters": [
                    {
                        "description": "Updated user profile data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserSignUp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/rocket_flights": {
            "get": {
                "description": "Retrieve a list of rocket flights based on the provided query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RocketFlights"
                ],
                "summary": "Get rocket flight list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date of the formation period",
                        "name": "form_date_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date of the formation period",
                        "name": "form_date_end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status of the flight",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.RocketFlight"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Update the details of a rocket flight.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RocketFlights"
                ],
                "summary": "Change rocket flight",
                "parameters": [
                    {
                        "description": "Details of the rocket flight",
                        "name": "flightDetails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RocketFlight"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rocket flight details successfully updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete a rocket flight draft.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RocketFlights"
                ],
                "summary": "Delete rocket flight",
                "responses": {
                    "200": {
                        "description": "Rocket flight draft successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/rocket_flights/form": {
            "post": {
                "description": "Form a rocket flight.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RocketFlights"
                ],
                "summary": "Form rocket flight",
                "parameters": [
                    {
                        "description": "Details of the rocket flight",
                        "name": "flightStatus",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RocketFlight"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rocket flight successfully formed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/rocket_flights/{id}": {
            "get": {
                "description": "Retrieve a rocket flight and its associated payloads based on the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RocketFlights"
                ],
                "summary": "Get rocket flight by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the rocket flight",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Payload"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/rocket_flights/{id}/response": {
            "put": {
                "description": "Update the status of a rocket flight.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RocketFlights"
                ],
                "summary": "Response rocket flight",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the rocket flight",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New status of the rocket flight",
                        "name": "flightStatus",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RocketFlight"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rocket flight status successfully updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/sign_in": {
            "post": {
                "description": "Authenticates a user and generates an access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User sign-in",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Register a new user account. The user will receive a JWT token upon successful registration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign up a new user",
                "parameters": [
                    {
                        "description": "User sign up data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserSignUp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Payload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "desired_price": {
                    "type": "number"
                },
                "detailed_desc": {
                    "type": "string"
                },
                "flight_date_end": {
                    "type": "string"
                },
                "flight_date_start": {
                    "type": "string"
                },
                "img_url": {
                    "type": "string"
                },
                "is_available": {
                    "type": "boolean"
                },
                "load_capacity": {
                    "type": "number"
                },
                "payload_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.RocketFlight": {
            "type": "object",
            "properties": {
                "confirmed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "integer"
                },
                "creator_login": {
                    "type": "string"
                },
                "flight_date": {
                    "type": "string"
                },
                "flight_id": {
                    "type": "integer"
                },
                "formed_at": {
                    "type": "string"
                },
                "load_capacity": {
                    "type": "number"
                },
                "moderator_id": {
                    "type": "integer"
                },
                "moderator_login": {
                    "type": "string"
                },
                "place_number": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "login": {
                    "type": "string",
                    "maxLength": 64
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 6
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.UserLogin": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 64
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                }
            }
        },
        "models.UserSignUp": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "login": {
                    "type": "string",
                    "maxLength": 64
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                }
            }
        }
    }
}